# --- General Ignores (适用于整个仓库，除非被更具体的规则覆盖) ---
# Logs
logs/
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*
lerna-debug.log*

# Editor directories and files
.vscode/
!.vscode/extensions.json # 不要忽略 VS Code 推荐插件配置
.idea/
.DS_Store
*.suo
*.ntvs*
*.njsproj
*.sln
*.sw?

# OS generated files
Thumbs.db

# --- Frontend Specific Ignores (在 frontend/ 目录内) ---
frontend/node_modules/ # 忽略前端的依赖目录
frontend/dist/       # 忽略前端的构建输出目录 (如果你的输出目录是 build, 则改为 frontend/build/)
# frontend/dist-ssr/ # 如果有 SSR 构建， uncomment this line

# Frontend log files within the directory
frontend/*.log
frontend/logs/

# --- Backend Specific Ignores (在 backend/ 目录内) ---
# Python compiled files
backend/__pycache__/ # 忽略 Python 编译生成的缓存目录
backend/*.pyc        # 忽略 Python 编译生成的文件

# Python virtual environments (常见的虚拟环境目录名)
backend/.venv/
backend/venv/
# 如果你使用了其他虚拟环境目录名，请在此处添加，例如:
# backend/env/

# Python dependency management files (通常 requirements.txt 是需要提交的，但其他工具可能生成不需要提交的锁文件)
# 如果你使用了 Pipenv 或 Poetry 但不想提交锁文件，uncomment 对应行:
# backend/Pipfile.lock
# backend/poetry.lock

# Backend log files within the directory
backend/*.log
backend/logs/

# Backend build output (对于 Vercel Functions 通常没有独立的构建输出目录，但以防万一)
# backend/build/

# --- Deployment Platform Specific Files (这些文件通常*需要*提交到 Git，让平台识别，所以确保它们不被忽略) ---
# .vercelignore     # Vercel 忽略文件，通常在根目录，应提交
# .cloudflarepagesignore # Cloudflare Pages 忽略文件 (如果使用)，通常在根目录，应提交
# vercel.json        # Vercel 配置文件，通常在根目录或项目根目录 (backend/)，应提交
# _workers.toml      # Cloudflare Workers/Pages 配置 (如果使用)，通常在根目录，应提交